# Generated by Django 2.2 on 2022-07-01 22:28

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='IndexType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='Название индекса')),
                ('lolimnum', models.FloatField(verbose_name='Числовая нижняя граница нормы показателя')),
                ('uplimnum', models.FloatField(verbose_name='Числовая верхняя граница нормы показателя')),
                ('created', models.DateTimeField(verbose_name='Время создания записи')),
                ('changed', models.DateTimeField(verbose_name='Время изменения записи')),
            ],
        ),
        migrations.CreateModel(
            name='LabType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Название анализа')),
                ('mu', models.CharField(max_length=32, verbose_name='Единицы измерения')),
                ('lolim', models.CharField(max_length=200, verbose_name='Нижняя граница нормы показателя')),
                ('lolimnum', models.FloatField(verbose_name='Числовая нижняя граница нормы показателя')),
                ('uplim', models.CharField(max_length=200, verbose_name='Верхняя граница нормы показателя')),
                ('uplimnum', models.FloatField(verbose_name='Числовая верхняя граница нормы показателя')),
                ('created', models.DateTimeField(verbose_name='Время создания записи')),
                ('changed', models.DateTimeField(verbose_name='Время изменения записи')),
            ],
        ),
        migrations.CreateModel(
            name='Medication',
            fields=[
                ('id', models.UUIDField(primary_key=True, serialize=False, verbose_name='UUID')),
                ('name', models.CharField(max_length=120, verbose_name='Официальное название препарата')),
                ('nomenclature', models.CharField(max_length=120, verbose_name='Номенклатура препарата')),
                ('manufacturer', models.CharField(max_length=120, verbose_name='Производитель препарата')),
                ('dose_form', models.CharField(max_length=50, verbose_name='Описание единицы учёта препарата')),
                ('dose_val', models.FloatField(verbose_name='Кол-во вещества в единице учёта')),
                ('mu', models.CharField(max_length=32, verbose_name='Единицы измерения вещества лекарства')),
                ('amount', models.IntegerField(verbose_name='Кол-во препарата в единицах учёта (мелких единицах)')),
                ('created', models.DateTimeField(verbose_name='Время создания записи')),
                ('changed', models.DateTimeField(verbose_name='Время изменения записи')),
            ],
        ),
        migrations.CreateModel(
            name='MedOrder',
            fields=[
                ('id', models.UUIDField(primary_key=True, serialize=False, verbose_name='UUID')),
                ('supplier', models.CharField(max_length=120, verbose_name='Поставщик препаратов')),
                ('form_date', models.DateTimeField(verbose_name='Время формирования и отправки заказа')),
                ('delivery_rate', models.DateTimeField(verbose_name='Время поступления заказа')),
                ('status', models.SmallIntegerField(verbose_name='Статус заказа')),
                ('created', models.DateTimeField(verbose_name='Время создания записи')),
                ('changed', models.DateTimeField(verbose_name='Время изменения записи')),
            ],
        ),
        migrations.CreateModel(
            name='Patient',
            fields=[
                ('id', models.UUIDField(primary_key=True, serialize=False, verbose_name='UUID')),
                ('full_name', models.CharField(max_length=96, verbose_name='ФИО пациента')),
                ('phone_number', models.CharField(max_length=11, verbose_name='Номер телефона пациента')),
                ('adverse_reactions', models.TextField(verbose_name='Нежелательные реакции')),
                ('date_of_birth', models.DateTimeField(verbose_name='Дата рождения')),
                ('sex', models.SmallIntegerField(verbose_name='Пол пациента (формат ISO/IEC 5218)')),
                ('email', models.CharField(max_length=120, verbose_name='Электронная почта')),
                ('contact_person', models.CharField(max_length=11, verbose_name='Телефонный номер контактного лица')),
                ('ambulatory_card', models.CharField(max_length=10, verbose_name='Номер амбулаторной карты из системы Interin')),
                ('finance_source', models.SmallIntegerField(verbose_name='Источник финансирования')),
                ('created', models.DateTimeField(verbose_name='Время создания записи')),
                ('changed', models.DateTimeField(verbose_name='Время изменения записи')),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.UUIDField(primary_key=True, serialize=False, verbose_name='UUID пользователя (первичный ключ)')),
                ('login', models.CharField(max_length=127, verbose_name='Логин пользователя')),
                ('password', models.CharField(max_length=127, verbose_name='Пароль для входа (ключ шифрования BCrypt)')),
                ('roles', models.IntegerField(verbose_name='Роли пользователя')),
            ],
        ),
        migrations.CreateModel(
            name='Therapy',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_time', models.DateTimeField(verbose_name='Время начала терапии')),
                ('end_time', models.DateTimeField(verbose_name='Время окончания терапии')),
                ('cabinet', models.CharField(max_length=15, verbose_name='Кабинет, где будет проходить терапия')),
                ('status', models.SmallIntegerField(verbose_name='Статус терапии')),
                ('comments', models.TextField(verbose_name='Примечание к записи о терапии')),
                ('created', models.DateTimeField(verbose_name='Время создания записи')),
                ('changed', models.DateTimeField(verbose_name='Время изменения записи')),
                ('patient_id', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='interface.Patient')),
            ],
        ),
        migrations.CreateModel(
            name='Prescription',
            fields=[
                ('id', models.UUIDField(primary_key=True, serialize=False, verbose_name='UUID')),
                ('dose_amount', models.IntegerField(verbose_name='Кол-во списанного к терапии лекарства в дозах')),
                ('substance_amount', models.FloatField(verbose_name='Кол-во списанного к терапии вещества лекарства')),
                ('administration_type', models.SmallIntegerField(verbose_name='Тип введения препарата')),
                ('comments', models.TextField(verbose_name='Примечание к назначению')),
                ('created', models.DateTimeField(verbose_name='Время создания записи')),
                ('changed', models.DateTimeField(verbose_name='Время изменения записи')),
                ('medication_id', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='interface.Medication')),
                ('therapy_id', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='interface.Therapy')),
            ],
        ),
        migrations.CreateModel(
            name='PatientIcd',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=8, verbose_name='Строковый код диагноза по классификации МКБ')),
                ('created', models.DateTimeField(verbose_name='Время создания записи')),
                ('changed', models.DateTimeField(verbose_name='Время изменения записи')),
                ('patient_id', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='interface.Patient')),
            ],
        ),
        migrations.CreateModel(
            name='OrderEntry',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.IntegerField(verbose_name='Кол-во единиц на заказ')),
                ('created', models.DateTimeField(verbose_name='Время создания записи')),
                ('changed', models.DateTimeField(verbose_name='Время изменения записи')),
                ('medication_id', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='interface.Medication', verbose_name='UUID препарата (внешний ключ)')),
                ('medorder', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='interface.MedOrder', verbose_name='UUID заказа в аптеку (внешний ключ)')),
            ],
        ),
        migrations.CreateModel(
            name='MedIndex',
            fields=[
                ('id', models.UUIDField(primary_key=True, serialize=False, verbose_name='ID терапии (внешний ключ)')),
                ('value', models.FloatField(verbose_name='Значение индекса')),
                ('aflag', models.CharField(max_length=32, verbose_name='Отклонение от нормы')),
                ('comments', models.TextField(verbose_name='Примечание специалиста')),
                ('created', models.TimeField(verbose_name='Время создания записи')),
                ('changed', models.TimeField(verbose_name='Время изменения записи')),
                ('index_type_id', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='interface.IndexType', verbose_name='Вид индекса')),
                ('therapy_id', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='interface.Therapy', verbose_name='ID терапии (внешний ключ)')),
            ],
        ),
        migrations.CreateModel(
            name='LabEvent',
            fields=[
                ('id', models.UUIDField(primary_key=True, serialize=False, verbose_name='UUID')),
                ('value', models.CharField(max_length=200, verbose_name='Показатель')),
                ('valuenum', models.FloatField(verbose_name='Числовой показатель')),
                ('comments', models.TextField(verbose_name='Комментарий специалиста')),
                ('taken', models.DateTimeField(verbose_name='Время взятия анализа')),
                ('aflag', models.CharField(max_length=32, verbose_name='Отклонение от нормы')),
                ('created', models.DateTimeField(verbose_name='Время создания записи')),
                ('changed', models.DateTimeField(verbose_name='Время изменения записи')),
                ('lab_type', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='interface.LabType', verbose_name='ID вида анализа (внешний ключ)')),
                ('patient_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='interface.Patient')),
            ],
        ),
    ]
